version: '3.8'

services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${API_EXTERNAL_PORT}:3000'
    environment:
      PORT: 3000
      DB_HOSTNAME: db
      DB_DATABASE: ${MYSQL_DATABASE}
      DB_PORT: 3306
      DB_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_USERNAME: ${MYSQL_USERNAME}
      DB_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    container_name: mysql
    image: mysql:8.0
    ports:
      - '${MYSQL_EXTERNAL_PORT}:3306'
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s
    volumes:
      - .docker/mysql:/var/lib/mysql
      - ./docker/mysql/init_dbs.sql:/docker-entrypoint-initdb.d/init_dbs.sql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    driver: local
